generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
  engineType    = "bindary"
}

generator typescriptInterfaces {
  provider = "prisma-generator-typescript-interfaces"
  enumType = "enum"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  tel            String?        @unique(map: "tel") @db.VarChar(256)
  name           String?        @db.VarChar(256)
  email          String         @unique(map: "email") @db.VarChar(256)
  password       String         @db.VarChar(256)
  role           userRole?      @default(user)
  gender         gender?
  id             Int            @id @default(autoincrement())
  createAt       DateTime?      @default(now()) @db.Timestamp(6)
  age            Int?
  profilePicture String?
  accountStatus  accountStatus? @default(active)
  language       language?      @default(fa)
}

model Product {
  id                  Int                   @id @default(autoincrement())
  title               String
  description         String?
  images              Json
  priceId             Float?
  sourceId            Int?
  sourceProductId     String?
  scrapedAt           DateTime?
  isActive            Boolean               @default(true)
  categoryId          Int?
  stock               Int?
  availability        String?
  rating              Float?
  reviewsCount        Int?
  discount            Float?
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  category            Category?             @relation(fields: [categoryId], references: [id])
  source              Source?               @relation(fields: [sourceId], references: [id])
  ProductPriceHistory ProductPriceHistory[]
  tags                TagsOnProducts[]
}

model Category {
  id               Int        @id @default(autoincrement())
  name             String
  parentCategoryId Int?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  subCategoryIds   Int[]
  parentCategory   Category?  @relation("CategoryToSubcategory", fields: [parentCategoryId], references: [id])
  subCategories    Category[] @relation("CategoryToSubcategory")
  products         Product[]
}

model Source {
  id            Int       @id @default(autoincrement())
  name          String
  url           String
  lastScrapedAt DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  products      Product[]
}

model ProductPriceHistory {
  id         Int      @id @default(autoincrement())
  productId  Int
  price      Float
  recordedAt DateTime @default(now())
  product    Product  @relation(fields: [productId], references: [id])
}

model ProductTag {
  id       Int              @id @default(autoincrement())
  label    String
  products TagsOnProducts[]
}

model TagsOnProducts {
  tagId     Int
  productId Int
  product   Product    @relation(fields: [productId], references: [id])
  tag       ProductTag @relation(fields: [tagId], references: [id])

  @@id([tagId, productId])
}

enum gender {
  male
  female
  others
}

enum userRole {
  user
  admin
}

enum accountStatus {
  active
  deactive
  suspended
}

enum language {
  en
  fa
}
